{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","FormWrapper","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","AuthStore","useStores","history","useHistory","name","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","register","then","console","log","push","catch","e","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"2lBAMA,IAAMA,EAAUC,IAAOC,IAAV,KAMPC,EAAcF,IAAOC,IAAV,KAGXE,EAAQH,IAAOI,GAAV,KAILC,EAAS,CACbC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEfE,EAAa,CACjBD,WAAY,CAACE,OAAQ,EAAGH,KAAM,KAgGjBI,UA9FE,WAAO,IACfC,EAAYC,cAAZD,UACHE,EAAUC,cA2Bd,OACE,kBAAChB,EAAD,KACE,kBAACI,EAAD,qBACA,kBAACD,EAAD,KACE,kBAAC,IAAD,iBACMG,EADN,CAEEW,KAAK,QACLC,cAAe,CAACC,UAAU,GAC1BC,SAlCS,SAAAC,GACfR,EAAUS,YAAYD,EAAOE,UAC7BV,EAAUW,YAAYH,EAAOI,UAC7BZ,EAAUa,WACPC,MAAK,WACJC,QAAQC,IAAI,4BACZd,EAAQe,KAAK,QACZC,OAAM,SAACC,GACVJ,QAAQC,IAAIG,GACZJ,QAAQC,IAAI,qCA0BRI,eAvBe,SAAAC,GACrBN,QAAQC,IAAI,UAAWK,MAwBjB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNnB,KAAK,WACLoB,MACE,CACE,CAACC,UAAU,EAAMC,QAAS,yCAC1B,CAACC,UA5BU,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,4EACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CAC1DD,QAAQG,cA6BP,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNnB,KAAK,WACLoB,MAAO,CACL,CAACC,UAAU,EAAMC,QAAS,kCAC1B,CACES,IAAK,EACLT,QAAS,yBAEX,CACEU,IAAK,EACLV,QAAS,qCAKb,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNnB,KAAK,kBACLoB,MACE,CACE,CAACC,UAAU,EAAMC,QAAS,wCAtDhB,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAsB,CAC5CX,UAD4C,SAClCC,EAAMC,GACd,OAAIS,EAAc,cAAgBT,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,6CAuDhB,kBAAC,IAAMK,SAAP,OAGF,kBAAC,IAAKf,KAASzB,EACb,kBAAC,IAAD,CAAQ0C,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/11.13eab35c.chunk.js","sourcesContent":["import React from \"react\";\nimport {Form, Input, Button} from 'antd';\nimport styled from 'styled-components';\nimport {useStores} from \"../stores\";\nimport {useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 20px auto;\n  box-shadow: 0 2px 2px rgba(0,0,0,0.2);\n  border: 1px solid rgba(230,230,230);\n`\nconst FormWrapper = styled.div`\n  padding: 30px 20px;\n`\nconst Title = styled.h1`\n  text-align: center;\n  margin-top: 30px;\n`\nconst layout = {\n  labelCol: {span: 6},\n  wrapperCol: {span: 16},\n};\nconst tailLayout = {\n  wrapperCol: {offset: 6, span: 16},\n};\nconst Register = () => {\n  const {AuthStore}= useStores()\n  let history = useHistory();\n  const onFinish = values => {\n    AuthStore.setUsername(values.username)\n    AuthStore.setPassword(values.password)\n    AuthStore.register()\n      .then(() => {\n        console.log('注册成功')\n        history.push(\"/\")\n      }).catch((e) => {\n      console.log(e);\n      console.log('注册失败-----')\n    })\n  };\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n  const validateUserName = (rule, value) => {\n    if (/\\W/.test(value)) return Promise.reject('只能是数字、字母、下划线')\n    if (value.length < 4 || value.length > 10) return Promise.reject('长度为4-10个字符')\n    return Promise.resolve()\n  }\n  const validateConfirm = ({getFieldValue}) => ({\n    validator(rule, value) {\n      if (getFieldValue('password') === value) return Promise.resolve()\n      return Promise.reject('两密码不一样')\n    }\n  })\n  return (\n    <Wrapper>\n      <Title>注册</Title>\n      <FormWrapper>\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{remember: true}}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"用户名\"\n            name=\"username\"\n            rules={\n              [\n                {required: true, message: '请输入用户名!'},\n                {validator: validateUserName}\n              ]\n            }\n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"密码\"\n            name=\"password\"\n            rules={[\n              {required: true, message: '请输入密码'},\n              {\n                min: 4,\n                message: '长度为4-8'\n              },\n              {\n                max: 8,\n                message: '最大长度为8'\n              }\n\n            ]}\n          >\n            <Input.Password/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"确认密码\"\n            name=\"confirmPassword\"\n            rules={\n              [\n                {required: true, message: '再次确认密码'},\n                validateConfirm\n              ]}\n          >\n            <Input.Password/>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </FormWrapper>\n    </Wrapper>\n  );\n}\nexport default Register"],"sourceRoot":""}